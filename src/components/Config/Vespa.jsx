/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 vespa.glb --transform -j 
Files: vespa.glb [13.59MB] > C:\Users\Tatiana\Desktop\UNI\DP\dp\vespa-transformed.glb [1.19MB] (91%)
Author: Lokeig (https://sketchfab.com/lokeig)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/vespa-368aeee32a784480acae4608441db325
Title: Vespa
*/

import React, { useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { Color } from "three";
import { useConfigurator } from "../../hooks/useConfigurator";

export function Model(props) {
  const { nodes, materials } = useGLTF("/models/vespa-transformed.glb");
  const { chairColor, lights } = useConfigurator();

  useEffect(() => {
    materials.Main.color = new Color(chairColor.color);
    if (lights) {
      materials.Glass.emissive = new Color("#ffffff"); // Glow color
      materials.Glass.emissiveIntensity = 1.5; // Adjust brightness
    } else {
      materials.Glass.emissive = new Color("#000000"); // Turn off glow
      materials.Glass.emissiveIntensity = 0;
    }
  }, [materials, chairColor, lights]);
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Vespa_Main_0.geometry}
        material={materials.Main}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.001}
      />
      <mesh
        geometry={nodes.Vespa_Wheel_0.geometry}
        material={materials.Wheel}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.001}
      />
      <mesh
        geometry={nodes.Vespa_Glass_0.geometry}
        material={materials.Glass}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.001}
      />
      <mesh
        geometry={nodes.Vespa_Light_0.geometry}
        material={materials.Light}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.001}
      />
    </group>
  );
}

useGLTF.preload("/models/vespa-transformed.glb");
